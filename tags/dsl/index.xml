<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DSL on Il y a du thé renversé au bord de la table !</title>
    <link>https://yoric.github.io/tags/dsl/</link>
    <description>Recent content in DSL on Il y a du thé renversé au bord de la table !</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 08 Mar 2018 07:26:05 +0100</lastBuildDate>
    <atom:link href="https://yoric.github.io/tags/dsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thinkerbell Postmortem/Brain dump</title>
      <link>https://yoric.github.io/post/thinkerbell-postmortem/</link>
      <pubDate>Thu, 08 Mar 2018 08:50:05 +0100</pubDate>
      <guid>https://yoric.github.io/post/thinkerbell-postmortem/</guid>
      <description>&lt;p&gt;Two years ago, I was working on a research project called &amp;ldquo;Project Link&amp;rdquo; as part of&#xA;the Connected Devices branch of Mozilla. While this branch has since been stopped,&#xA;some part of Project Link lives on as &lt;a href=&#34;https://blog.mozilla.org/blog/2018/02/06/announcing-project-things-open-framework-connecting-devices-web/&#34;&gt;Project Things&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One of the parts of Project Link that hasn&amp;rsquo;t made it to Project Things (so far)&#xA;was Thinkerbell: a Domain-Specific Language designed to let users program their SmartHome&#xA;without coding. While only parts of Thinkerbell were ever implemented, they were sufficient&#xA;to write programs such as:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Whenever I press any button labelled &amp;ldquo;light&amp;rdquo; in the living room, toggle all the lights in the living room.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;or&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;If the entry door is locked and the motion detector notices motion, send an alarm to my SmartPhone.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Thinkerbell also had:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;semantics that ensured that scripts could continue/resume running unmonitored even when hardware&#xA;was replaced/upgraded/moved around the house, including both the server and the sensors;&lt;/li&gt;&#xA;&lt;li&gt;a visual syntax, rather than a text syntax;&lt;/li&gt;&#xA;&lt;li&gt;a novel type system designed to avoid physical accidents;&lt;/li&gt;&#xA;&lt;li&gt;a semantics based on process algebras.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ideally, I&amp;rsquo;d like to take the time to write a research paper on Thinkerbell, but&#xA;realistically, there is very little chance that I&amp;rsquo;ll find that time.&#xA;So, rather than letting these ideas die in some corner of my brain, here is a post-mortem&#xA;for Thinkerbell, in the hope that someone, somewhere, will pick some of the stuff and gives&#xA;it a second life.&lt;/p&gt;&#xA;&lt;p&gt;Note that some of the ideas exposed here were never actually implemented. Project Link&#xA;was cancelled while Thinkerbell was still in its infancy.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
