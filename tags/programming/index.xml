<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Il y a du thé renversé au bord de la table !</title>
    <link>https://yoric.github.io/tags/programming/</link>
    <description>Recent content in programming on Il y a du thé renversé au bord de la table !</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 27 Nov 2023 23:42:50 +0100</lastBuildDate><atom:link href="https://yoric.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>So You Want to Optimize Your Code (also, a disordered, confusing and absolutely incomplete oral history of Firefox performance)</title>
      <link>https://yoric.github.io/post/so-you-want-to-optimize-your-code/</link>
      <pubDate>Mon, 27 Nov 2023 23:42:50 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/so-you-want-to-optimize-your-code/</guid>
      <description>&lt;p&gt;So you want to optimize your code, eh? Who am I to blame you? &lt;a href=&#34;../coding-for-a-finite-world/&#34;&gt;I certainly want you to optimize your code&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I spent a few years as part of the Firefox Performance Team, on the frontline of, well, performance. I still
bear some of the scars. So, as the grizzled perf-veteran that I have decided to be for the day, let
me invite you to sit down for a while and share a little hard-earned experience on code optimization.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Programming Languages That Blew My Mind</title>
      <link>https://yoric.github.io/post/programming-languages-that-blew-my-mind/</link>
      <pubDate>Mon, 20 Nov 2023 09:55:20 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/programming-languages-that-blew-my-mind/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been a programmer since the age of 8, and some kind of developer for most of my life. Throughout my
life as a coder, both hobbyist and professional, I&amp;rsquo;ve learnt plenty of programming languages that felt
like cookie-cutter clones of each other, but also a few programming languages that changed the way I
looked at programming, sometimes even at thinking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Coding for a Finite World</title>
      <link>https://yoric.github.io/post/coding-for-a-finite-world/</link>
      <pubDate>Wed, 01 Nov 2023 15:51:13 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/coding-for-a-finite-world/</guid>
      <description>&lt;p&gt;(This is meant to be the first entry of a series which will cover individual points more in depth. We&amp;rsquo;ll see how that goes.)&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re the tech industry. We have ideas. We have ideas &lt;em&gt;all the time&lt;/em&gt;. And we&amp;rsquo;re used to turn our ideas into applications.&lt;/p&gt;
&lt;p&gt;So, how does it go&amp;hellip; here&amp;rsquo;s the back-end component&amp;hellip; here&amp;rsquo;s the front-end component. We&amp;rsquo;ll write the former in Python, or perhaps JavaScript, to optimize for prototyping. After all, we have &lt;em&gt;so many&lt;/em&gt; ideas, we need the ability to iterate quickly. Sprinkle in a few dependencies, that will speed us up. Oh, and let&amp;rsquo;s use ChatGPT and Copilot, we&amp;rsquo;ll be even faster. Oh, and performance, yeah, performance: microservices, Kafka, Redis, Kubernetes&amp;hellip; we&amp;rsquo;re now ready to scale up. Oh, Sentry, Prometheus and Grafana, too, where would we be without &amp;rsquo;em? For the front-end, we&amp;rsquo;ll write a website, and for mobile, Electron.&lt;/p&gt;
&lt;p&gt;Oh, wait a second, we need to make money and to fidelize our users! Let me see&amp;hellip; ads, tracking, and good reasons to revisit our app, perhaps a little NFT here, gamification&amp;hellip; alright, we should be good.&lt;/p&gt;
&lt;p&gt;Three&amp;hellip; two&amp;hellip; one&amp;hellip; and we have shipped v1!&lt;/p&gt;
&lt;p&gt;Also, the world is burning.&lt;/p&gt;
&lt;p&gt;Perhaps it&amp;rsquo;s time we revisited how we do things?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Safety, Security and yes, C&#43;&#43; and Rust</title>
      <link>https://yoric.github.io/post/safety-and-security/</link>
      <pubDate>Fri, 03 Feb 2023 21:54:25 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/safety-and-security/</guid>
      <description>&lt;p&gt;Recent publications by &lt;a href=&#34;https://advocacy.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-1-1.pdf&#34;&gt;Consumer Reports&lt;/a&gt; and the &lt;a href=&#34;https://media.defense.gov/2022/Nov/10/2003112742/-1/-1/0/CSI_SOFTWARE_MEMORY_SAFETY.PDF&#34;&gt;NSA&lt;/a&gt; have launched countless conversations in development circles about &lt;em&gt;safety&lt;/em&gt; and its benefits.&lt;/p&gt;
&lt;p&gt;In these conversations, I&amp;rsquo;ve seen many misunderstandings about what safety means in programming and how programming languages can implement, help or hinder safety. Let&amp;rsquo;s clarify a few things.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
