<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Il y a du thé renversé au bord de la table !</title>
    <link>https://yoric.github.io/tags/rust/</link>
    <description>Recent content in Rust on Il y a du thé renversé au bord de la table !</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 17 Jan 2020 13:35:02 +0100</lastBuildDate>
    
	<atom:link href="https://yoric.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Units of Measure in Rust with Refinement Types</title>
      <link>https://yoric.github.io/post/uom.rs/</link>
      <pubDate>Fri, 17 Jan 2020 13:35:02 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/uom.rs/</guid>
      <description>&lt;p&gt;Years ago, Andrew Kennedy published &lt;a href=&#34;http://typesatwork.imm.dtu.dk/material/TaW_Paper_TypesAtWork_Kennedy.pdf&#34;&gt;a foundational paper&lt;/a&gt; about a type checker for units of measure, and later &lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/andrewkennedy/units-of-measure-in-f-part-one-introducing-units&#34;&gt;implemented it for
F#&lt;/a&gt;. To this day, F# is the only mainstream programming language which provides first class support to make sure that you will not accidentally confuse meters and feet, euros and dollars, but that you can still convert between watts·hours and joules.&lt;/p&gt;

&lt;p&gt;I decided to see whether this could be implemented in and for Rust. The answer is not only yes, but it was fun :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HolyJIT: Could we write a multi-staged JIT compiler?</title>
      <link>https://yoric.github.io/post/holyjit/</link>
      <pubDate>Tue, 06 Mar 2018 07:33:25 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/holyjit/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Credit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While I&amp;rsquo;m the author of this blog post, 99% of the work was done by Nicolas B. Pierron.&lt;/p&gt;

&lt;p&gt;So far, my role in this project has largely been to play the wise old advisor,
nodding and smiling mischeviously whenever Nicolas started exploring new ideas,
and emitting cryptic comments in Reverse Jedi Notation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few months ago, we published a &lt;a href=&#34;https://blog.mozilla.org/javascript/2017/10/20/holyjit-a-new-hope/&#34;&gt;short (and mysterious) blog post&lt;/a&gt; in which we
mentioned HolyJIT, an early research project towards a novel approach to writing JITs.&lt;/p&gt;

&lt;p&gt;In this blog post, I would like to detail a bit more the ideas behind HolyJIT.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Typestates in Rust</title>
      <link>https://yoric.github.io/post/rust-typestate/</link>
      <pubDate>Thu, 22 Feb 2018 15:15:55 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/rust-typestate/</guid>
      <description>&lt;p&gt;A long time ago, the Rust language was a language with typestate. Officially, typestates were dropped long before Rust 1.0. In this entry, I’ll get you in on the worst kept secret of the Rust community: Rust still has typestates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Extracting text from images is not easy (who would have guessed?)</title>
      <link>https://yoric.github.io/post/extracting-text-from-images/</link>
      <pubDate>Sun, 01 Jan 2017 23:44:19 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/extracting-text-from-images/</guid>
      <description>At its core, Lighthouse is an idea we have been discussing in Connected Devices: can we build a device that will help people with partial or total vision disabilities?
From there, we started a number of experiments. I figured out it was time to braindump some of them.
Our problem Consider the following example:
How do we get from this beautiful picture of Mozilla&amp;rsquo;s Paris office to the text &amp;ldquo;PRIDE and PREJUDICE&amp;rdquo;, &amp;ldquo;Jane Austen&amp;rdquo;, &amp;ldquo;Great Books&amp;rdquo;, &amp;ldquo;Great Prices&amp;rdquo;, &amp;ldquo;$9.</description>
    </item>
    
  </channel>
</rss>