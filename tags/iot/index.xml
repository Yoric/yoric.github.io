<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT on Il y a du thé renversé au bord de la table !</title>
    <link>https://yoric.github.io/tags/iot/</link>
    <description>Recent content in IoT on Il y a du thé renversé au bord de la table !</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Thu, 08 Mar 2018 08:50:05 +0100</lastBuildDate><atom:link href="https://yoric.github.io/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thinkerbell Postmortem/Brain dump</title>
      <link>https://yoric.github.io/post/thinkerbell-postmortem/</link>
      <pubDate>Thu, 08 Mar 2018 08:50:05 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/thinkerbell-postmortem/</guid>
      <description>&lt;p&gt;Two years ago, I was working on a research project called &amp;ldquo;Project Link&amp;rdquo; as part of
the Connected Devices branch of Mozilla. While this branch has since been stopped,
some part of Project Link lives on as &lt;a href=&#34;https://blog.mozilla.org/blog/2018/02/06/announcing-project-things-open-framework-connecting-devices-web/&#34;&gt;Project Things&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the parts of Project Link that hasn&amp;rsquo;t made it to Project Things (so far)
was Thinkerbell: a Domain-Specific Language designed to let users program their SmartHome
without coding. While only parts of Thinkerbell were ever implemented, they were sufficient
to write programs such as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever I press any button labelled &amp;ldquo;light&amp;rdquo; in the living room, toggle all the lights in the living room.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the entry door is locked and the motion detector notices motion, send an alarm to my SmartPhone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thinkerbell also had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;semantics that ensured that scripts could continue/resume running unmonitored even when hardware
was replaced/upgraded/moved around the house, including both the server and the sensors;&lt;/li&gt;
&lt;li&gt;a visual syntax, rather than a text syntax;&lt;/li&gt;
&lt;li&gt;a novel type system designed to avoid physical accidents;&lt;/li&gt;
&lt;li&gt;a semantics based on process algebras.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ideally, I&amp;rsquo;d like to take the time to write a research paper on Thinkerbell, but
realistically, there is very little chance that I&amp;rsquo;ll find that time.
So, rather than letting these ideas die in some corner of my brain, here is a post-mortem
for Thinkerbell, in the hope that someone, somewhere, will pick some of the stuff and gives
it a second life.&lt;/p&gt;
&lt;p&gt;Note that some of the ideas exposed here were never actually implemented. Project Link
was cancelled while Thinkerbell was still in its infancy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Project Lighthouse: A post-mortem</title>
      <link>https://yoric.github.io/post/post-mortem-lighthouse/</link>
      <pubDate>Mon, 20 Feb 2017 10:44:33 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/post-mortem-lighthouse/</guid>
      <description>A few weeks ago, Mozilla pulled the plug on its Connected Devices Experiment: a bunch of internal non-profit hardware-related startups. One of our main objectives was to determine if we could come up with designs that could help turn the tide against the spyware-riddled and gruyère-level security devices that are currently being offered (or pushed) to unwary users.
One of the startups was Project Lighthouse. We tried to provide an affordable, simple and privacy-friendly tool for people suffering from vision impairment and who needed help in their daily life.</description>
    </item>
    
    <item>
      <title>Things to do before you[r project] die[s]</title>
      <link>https://yoric.github.io/post/how-to-survive/</link>
      <pubDate>Fri, 17 Feb 2017 00:10:34 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/how-to-survive/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s no secret that all projects die, eventually, and that most projects die
before they have had a chance to have any impact. This is true of personal projects,
of open-source projects, of startup projects, of hardware projects, and more.&lt;/p&gt;
&lt;p&gt;A few days ago, &lt;a href=&#34;https://wiki.mozilla.org/Connected_Devices/Projects/Project_Lighthouse&#34;&gt;the IoT project on which I was working&lt;/a&gt;
did just that. It was funded, it was open-source, it was open-hardware, and it
still died before having the opportunity to release anything useful. In our case,
we got pretty far, didn&amp;rsquo;t run out of funds, and were a little polish away from
putting our first alpha-testers in front of a pretty advanced prototype before
a higher-level strategy pivot killed a number of projects at once.&lt;/p&gt;
&lt;p&gt;Ah, well, risks of the trade.&lt;/p&gt;
&lt;p&gt;Still, working on it, we managed to learn or come up with a few tricks
to increase the chances of surviving at least long enough to release a product.
I&amp;rsquo;ll try to summarize and explain some of these tricks here. Hopefully, if you
have a project, regardless of funding and medium, you may find some of this
summary useful.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Extracting text from images is not easy (who would have guessed?)</title>
      <link>https://yoric.github.io/post/extracting-text-from-images/</link>
      <pubDate>Sun, 01 Jan 2017 23:44:19 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/extracting-text-from-images/</guid>
      <description>At its core, Lighthouse is an idea we have been discussing in Connected Devices: can we build a device that will help people with partial or total vision disabilities?
From there, we started a number of experiments. I figured out it was time to braindump some of them.
Our problem Consider the following example:
How do we get from this beautiful picture of Mozilla&amp;rsquo;s Paris office to the text &amp;ldquo;PRIDE and PREJUDICE&amp;rdquo;, &amp;ldquo;Jane Austen&amp;rdquo;, &amp;ldquo;Great Books&amp;rdquo;, &amp;ldquo;Great Prices&amp;rdquo;, &amp;ldquo;$9.</description>
    </item>
    
  </channel>
</rss>
