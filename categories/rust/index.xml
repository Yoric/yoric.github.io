<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on Il y a du thé renversé au bord de la table !</title>
    <link>https://yoric.github.io/categories/rust/</link>
    <description>Recent content in rust on Il y a du thé renversé au bord de la table !</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 03 Feb 2023 08:54:25 +0100</lastBuildDate><atom:link href="https://yoric.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Safety, Security and yes, C&#43;&#43; and Rust</title>
      <link>https://yoric.github.io/post/safety-and-security/</link>
      <pubDate>Fri, 03 Feb 2023 08:54:25 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/safety-and-security/</guid>
      <description>&lt;p&gt;Recent publications by &lt;a href=&#34;https://advocacy.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-1-1.pdf&#34;&gt;Consumer Reports&lt;/a&gt; and the &lt;a href=&#34;https://media.defense.gov/2022/Nov/10/2003112742/-1/-1/0/CSI_SOFTWARE_MEMORY_SAFETY.PDF&#34;&gt;NSA&lt;/a&gt; have launched countless conversations in development circles about &lt;em&gt;safety&lt;/em&gt; and its benefits.&lt;/p&gt;
&lt;p&gt;In these conversations, I&amp;rsquo;ve seen many misunderstandings about what safety means in programming and how programming languages can implement, help or hinder safety. Let&amp;rsquo;s clarify a few things.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Possibly one step towards named arguments in Rust</title>
      <link>https://yoric.github.io/post/rust-named-arguments/</link>
      <pubDate>Sat, 08 Aug 2020 08:46:22 +0200</pubDate>
      
      <guid>https://yoric.github.io/post/rust-named-arguments/</guid>
      <description>&lt;p&gt;A number of programming languages offer a feature called &amp;ldquo;Named Arguments&amp;rdquo; or &amp;ldquo;Labeled Arguments&amp;rdquo;, which
makes some function calls much more readable and safer.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see how hard it would be to add these in Rust.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Typestates in Rust</title>
      <link>https://yoric.github.io/post/rust-typestate/</link>
      <pubDate>Thu, 22 Feb 2018 15:15:55 +0100</pubDate>
      
      <guid>https://yoric.github.io/post/rust-typestate/</guid>
      <description>&lt;p&gt;A long time ago, the Rust language was a language with typestate. Officially, typestates were dropped long before Rust 1.0. In this entry, I’ll get you in on the worst kept secret of the Rust community: Rust still has typestates.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
